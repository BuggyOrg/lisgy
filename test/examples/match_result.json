{
  "code": "(match [n m] [0 0] \"FizzBuzz\" [0 _] \"Fizz\" [_ 0] \"Buzz\" :else n)",
  "nodes": [
    {
      "value": {
        "v": "match",
        "value": {
          "inputPorts": {
            "n": "generic",
            "m": "generic"
          },
          "outputPorts": {
            "out": "generic"
          },
          "implementation": {
            "nodes": [
              {
                "name": "match_rules",
                "rules": [
                  {
                    "inputs": [
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "n"
                      },
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": false,
                        "type": "string",
                        "value/const": "FizzBuzz"
                      }
                    ]
                  },
                  {
                    "inputs": [
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "n"
                      },
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "m",
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": false,
                        "type": "string",
                        "value/const": "Fizz"
                      }
                    ]
                  },
                  {
                    "inputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "n",
                        "name": "n"
                      },
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": false,
                        "type": "string",
                        "value/const": "Buzz"
                      }
                    ]
                  },
                  {
                    "inputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "n",
                        "name": "n"
                      },
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "m",
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "n",
                        "name": "out"
                      }
                    ]
                  }
                ],
                "inputPorts": {
                  "m": "generic",
                  "n": "generic"
                },
                "outputPorts": {
                  "out": "generic"
                }
              }
            ],
            "edges": [
              {
                "from": "n",
                "to": "match_rules:n"
              },
              {
                "from": "m",
                "to": "match_rules:m"
              },
              {
                "from": "match_rules:out",
                "to": "out"
              }
            ]
          }
        }
      }
    }
  ],
  "edges": []
}
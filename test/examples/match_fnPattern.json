{
  "code": "(match [n m] [0 0] [\"FizzBuzz\"] [0 _] [\"Fizz\"] [_ (math/add n 1)] [\"Buzz\"] else [n])",
  "nodes": [
    {
      "v": "defco_mrules_2",
      "value": {
        "id": "mrules_2",
        "inputPorts": {
          "m": "generic",
          "n": "generic",
          "p_6_1": "generic"
        },
        "outputPorts": {
          "out_0": "generic"
        },
        "rules": [
          {
            "inputs": [
              {
                "variable": false,
                "type": "number",
                "value/const": 0,
                "name": "n"
              },
              {
                "variable": false,
                "type": "number",
                "value/const": 0,
                "name": "m"
              }
            ],
            "outputs": [
              {
                "variable": false,
                "type": "string",
                "value/const": "FizzBuzz",
                "name": "out_0"
              }
            ]
          },
          {
            "inputs": [
              {
                "variable": false,
                "type": "number",
                "value/const": 0,
                "name": "n"
              },
              {
                "variable": true,
                "type": "generic",
                "value": "m",
                "name": "m"
              }
            ],
            "outputs": [
              {
                "variable": false,
                "type": "string",
                "value/const": "Fizz",
                "name": "out_0"
              }
            ]
          },
          {
            "inputs": [
              {
                "variable": true,
                "type": "generic",
                "value": "n",
                "name": "n"
              },
              {
                "variable": true,
                "type": "generic",
                "value": "p_6_1",
                "name": "m"
              }
            ],
            "outputs": [
              {
                "variable": false,
                "type": "string",
                "value/const": "Buzz",
                "name": "out_0"
              }
            ]
          },
          {
            "inputs": [
              {
                "variable": true,
                "type": "generic",
                "value": "n",
                "name": "n"
              },
              {
                "variable": true,
                "type": "generic",
                "value": "m",
                "name": "m"
              }
            ],
            "outputs": [
              {
                "variable": true,
                "type": "generic",
                "value": "n",
                "name": "out_0"
              }
            ]
          }
        ],
        "name": "defco_mrules_2"
      }
    },
    {
      "v": "match_0_name",
      "value": {
        "id": "match_0",
        "inputPorts": {
          "n": "generic",
          "m": "generic"
        },
        "outputPorts": {
          "out_0": "generic"
        },
        "implementation": {
          "nodes": [
            {
              "meta": "math/add",
              "name": "add_2"
            },
            {
              "meta": "math/const",
              "name": "const(1)_3",
              "params": {
                "value": 1
              }
            },
            {
              "meta": "mrules_2",
              "name": "match_rules_2"
            }
          ],
          "edges": [
            {
              "from": "n",
              "to": "match_rules_2:n"
            },
            {
              "from": "m",
              "to": "match_rules_2:m"
            },
            {
              "from": "n",
              "to": "add_2:s1"
            },
            {
              "from": "const(1)_3:output",
              "to": "add_2:s2"
            },
            {
              "from": "add_2:sum",
              "to": "match_rules_2:p_6_1"
            },
            {
              "from": "match_rules_2:out_0",
              "to": "out_0"
            }
          ]
        },
        "name": "match_0_name"
      }
    }
  ],
  "edges": [],
  "options": {
    "directed": true,
    "multigraph": true,
    "compound": true
  }
}
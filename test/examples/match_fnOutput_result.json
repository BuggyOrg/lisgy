{
  "code": "(match [n m] [0 0] (math/add n 1) [0 _] n [_ 0] \"Buzz\" :else (math/add 1 1))",
  "nodes": [
    {
      "value": {
        "v": "match",
        "value": {
          "inputPorts": {
            "n": "generic",
            "m": "generic"
          },
          "outputPorts": {
            "out": "generic"
          },
          "implementation": {
            "nodes": [
              {
                "v": "defco_out_fn_2",
                "value": {
                  "id": "out_fn_2",
                  "inputPorts": {
                    "n": "generic",
                    "m": "generic"
                  },
                  "outputPorts": {
                    "out": "generic"
                  },
                  "settings": {
                    "argumentOrdering": [
                      "n",
                      "m",
                      "out"
                    ]
                  },
                  "implementation": {
                    "nodes": [
                      {
                        "meta": "math/add",
                        "name": "add_0"
                      },
                      {
                        "meta": "math/const",
                        "name": "const(1)_1",
                        "params": {
                          "value": 1
                        }
                      }
                    ],
                    "edges": [
                      {
                        "from": "n",
                        "to": "add_0:s1"
                      },
                      {
                        "from": "const(1)_1:output",
                        "to": "add_0:s2"
                      },
                      {
                        "from": "add_0:sum",
                        "to": "out"
                      }
                    ]
                  },
                  "name": "defco_out_fn_2"
                }
              },
              {
                "v": "defco_out_fn_8",
                "value": {
                  "id": "out_fn_8",
                  "inputPorts": {
                    "n": "generic",
                    "m": "generic"
                  },
                  "outputPorts": {
                    "out": "generic"
                  },
                  "settings": {
                    "argumentOrdering": [
                      "n",
                      "m",
                      "out"
                    ]
                  },
                  "implementation": {
                    "nodes": [
                      {
                        "meta": "math/add",
                        "name": "add_0"
                      },
                      {
                        "meta": "math/const",
                        "name": "const(1)_1",
                        "params": {
                          "value": 1
                        }
                      },
                      {
                        "meta": "math/const",
                        "name": "const(1)_2",
                        "params": {
                          "value": 1
                        }
                      }
                    ],
                    "edges": [
                      {
                        "from": "const(1)_1:output",
                        "to": "add_0:s1"
                      },
                      {
                        "from": "const(1)_2:output",
                        "to": "add_0:s2"
                      },
                      {
                        "from": "add_0:sum",
                        "to": "out"
                      }
                    ]
                  },
                  "name": "defco_out_fn_8"
                }
              },
              {
                "name": "match_rules",
                "rules": [
                  {
                    "inputs": [
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "n"
                      },
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "r2",
                        "name": "out"
                      }
                    ]
                  },
                  {
                    "inputs": [
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "n"
                      },
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "m",
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "n",
                        "name": "out"
                      }
                    ]
                  },
                  {
                    "inputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "n",
                        "name": "n"
                      },
                      {
                        "variable": false,
                        "type": "number",
                        "value/const": 0,
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": false,
                        "type": "string",
                        "value/const": "Buzz",
                        "name": "out"
                      }
                    ]
                  },
                  {
                    "inputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "n",
                        "name": "n"
                      },
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "m",
                        "name": "m"
                      }
                    ],
                    "outputs": [
                      {
                        "variable": true,
                        "type": "generic",
                        "value": "r8",
                        "name": "out"
                      }
                    ]
                  }
                ],
                "inputPorts": {
                  "r2": "generic",
                  "m": "generic",
                  "n": "generic",
                  "r8": "generic"
                },
                "outputPorts": {
                  "out": "generic"
                }
              }
            ],
            "edges": [
              {
                "from": "n",
                "to": "match_rules:n"
              },
              {
                "from": "m",
                "to": "match_rules:m"
              },
              {
                "from": "n",
                "to": "defco_out_fn_2:n"
              },
              {
                "from": "m",
                "to": "defco_out_fn_2:m"
              },
              {
                "from": "defco_out_fn_2:out",
                "to": "match_rules:r2"
              },
              {
                "from": "n",
                "to": "defco_out_fn_8:n"
              },
              {
                "from": "m",
                "to": "defco_out_fn_8:m"
              },
              {
                "from": "defco_out_fn_8:out",
                "to": "match_rules:r8"
              },
              {
                "from": "match_rules:out",
                "to": "out"
              }
            ]
          }
        }
      }
    }
  ],
  "edges": []
}
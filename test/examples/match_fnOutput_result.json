{
  "code": "(match [n m] [0 0] [(math/add n 1)] [0 _] [n] [_ 0] [\"Buzz\"] :else [(math/add 1 1)])",
  "nodes": [
    {
      "v": "match_0_name",
      "value": {
        "id": "match_0",
        "inputPorts": {
          "n": "generic",
          "m": "generic"
        },
        "outputPorts": {
          "out_0": "generic"
        },
        "implementation": {
          "nodes": [
            {
              "v": "defco_out_0_fn_2",
              "value": {
                "id": "out_0_fn_2",
                "inputPorts": {
                  "n": "generic",
                  "m": "generic"
                },
                "outputPorts": {
                  "out_0": "generic"
                },
                "settings": {
                  "argumentOrdering": [
                    "n",
                    "m",
                    "out_0"
                  ]
                },
                "implementation": {
                  "nodes": [
                    {
                      "meta": "math/add",
                      "name": "add_0"
                    },
                    {
                      "meta": "math/const",
                      "name": "const(1)_1",
                      "params": {
                        "value": 1
                      }
                    }
                  ],
                  "edges": [
                    {
                      "from": "n",
                      "to": "add_0:s1"
                    },
                    {
                      "from": "const(1)_1:output",
                      "to": "add_0:s2"
                    },
                    {
                      "from": "add_0:sum",
                      "to": "out_0"
                    }
                  ]
                },
                "name": "defco_out_0_fn_2"
              }
            },
            {
              "v": "defco_out_0_fn_8",
              "value": {
                "id": "out_0_fn_8",
                "inputPorts": {
                  "n": "generic",
                  "m": "generic"
                },
                "outputPorts": {
                  "out_0": "generic"
                },
                "settings": {
                  "argumentOrdering": [
                    "n",
                    "m",
                    "out_0"
                  ]
                },
                "implementation": {
                  "nodes": [
                    {
                      "meta": "math/add",
                      "name": "add_0"
                    },
                    {
                      "meta": "math/const",
                      "name": "const(1)_1",
                      "params": {
                        "value": 1
                      }
                    },
                    {
                      "meta": "math/const",
                      "name": "const(1)_2",
                      "params": {
                        "value": 1
                      }
                    }
                  ],
                  "edges": [
                    {
                      "from": "const(1)_1:output",
                      "to": "add_0:s1"
                    },
                    {
                      "from": "const(1)_2:output",
                      "to": "add_0:s2"
                    },
                    {
                      "from": "add_0:sum",
                      "to": "out_0"
                    }
                  ]
                },
                "name": "defco_out_0_fn_8"
              }
            },
            {
              "name": "match_rules_1",
              "rules": [
                {
                  "inputs": [
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "n"
                    },
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "r2",
                      "name": "out_0"
                    }
                  ]
                },
                {
                  "inputs": [
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "n"
                    },
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "m",
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "n",
                      "name": "out_0"
                    }
                  ]
                },
                {
                  "inputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "n",
                      "name": "n"
                    },
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": false,
                      "type": "string",
                      "value/const": "Buzz",
                      "name": "out_0"
                    }
                  ]
                },
                {
                  "inputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "n",
                      "name": "n"
                    },
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "m",
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "r8",
                      "name": "out_0"
                    }
                  ]
                }
              ],
              "inputPorts": {
                "r2": "generic",
                "m": "generic",
                "n": "generic",
                "r8": "generic"
              },
              "outputPorts": {
                "out_0": "generic"
              }
            }
          ],
          "edges": [
            {
              "from": "n",
              "to": "match_rules_1:n"
            },
            {
              "from": "m",
              "to": "match_rules_1:m"
            },
            {
              "from": "n",
              "to": "defco_out_0_fn_2:n"
            },
            {
              "from": "m",
              "to": "defco_out_0_fn_2:m"
            },
            {
              "from": "defco_out_0_fn_2:out_0",
              "to": "match_rules_1:r2"
            },
            {
              "from": "n",
              "to": "defco_out_0_fn_8:n"
            },
            {
              "from": "m",
              "to": "defco_out_0_fn_8:m"
            },
            {
              "from": "defco_out_0_fn_8:out_0",
              "to": "match_rules_1:r8"
            },
            {
              "from": "match_rules:out_0",
              "to": "out_0"
            }
          ]
        },
        "name": "match_0_name"
      }
    }
  ],
  "edges": [],
  "options": {
    "directed": true,
    "multigraph": true,
    "compound": true
  }
}
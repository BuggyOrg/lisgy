{
  "code": "(defco match_0 [n] [:out (match [(math/add n 1) (math/add 1 1)] [0 0] \"FizzBuzz\" [0 _] \"Fizz\" [_ 0] \"Buzz\" :else (math/add 1 n))])",
  "nodes": [
    {
      "v": "defco_match_0",
      "value": {
        "id": "match_0",
        "inputPorts": {
          "n": "generic"
        },
        "outputPorts": {
          "out": "generic"
        },
        "settings": {
          "argumentOrdering": [
            "n",
            "out"
          ]
        },
        "implementation": {
          "nodes": [
            {
              "v": "match",
              "value": {
                "inputPorts": {
                  "n": "generic"
                },
                "outputPorts": {
                  "out": "generic"
                },
                "implementation": {
                  "nodes": [
                    {
                      "meta": "math/add",
                      "name": "add_0"
                    },
                    {
                      "meta": "math/const",
                      "name": "const(1)_1",
                      "params": {
                        "value": 1
                      }
                    },
                    {
                      "meta": "math/add",
                      "name": "add_2"
                    },
                    {
                      "meta": "math/const",
                      "name": "const(1)_3",
                      "params": {
                        "value": 1
                      }
                    },
                    {
                      "meta": "math/const",
                      "name": "const(1)_4",
                      "params": {
                        "value": 1
                      }
                    },
                    {
                      "v": "defco_out_fn_8",
                      "value": {
                        "id": "out_fn_8",
                        "inputPorts": {
                          "add_0": "generic",
                          "add_2": "generic"
                        },
                        "outputPorts": {
                          "out": "generic"
                        },
                        "settings": {
                          "argumentOrdering": [
                            "add_0",
                            "add_2",
                            "out"
                          ]
                        },
                        "implementation": {
                          "nodes": [
                            {
                              "meta": "math/add",
                              "name": "add_0"
                            },
                            {
                              "meta": "math/const",
                              "name": "const(1)_1",
                              "params": {
                                "value": 1
                              }
                            }
                          ],
                          "edges": [
                            {
                              "from": "const(1)_1:output",
                              "to": "add_0:s1"
                            },
                            {
                              "from": "add_0:sum",
                              "to": "out"
                            }
                          ]
                        },
                        "name": "defco_out_fn_8"
                      }
                    },
                    {
                      "name": "match_rules",
                      "rules": [
                        {
                          "inputs": [
                            {
                              "variable": false,
                              "type": "number",
                              "value/const": 0,
                              "name": "add_0"
                            },
                            {
                              "variable": false,
                              "type": "number",
                              "value/const": 0,
                              "name": "add_2"
                            }
                          ],
                          "outputs": [
                            {
                              "variable": false,
                              "type": "string",
                              "value/const": "FizzBuzz"
                            }
                          ]
                        },
                        {
                          "inputs": [
                            {
                              "variable": false,
                              "type": "number",
                              "value/const": 0,
                              "name": "add_0"
                            },
                            {
                              "variable": true,
                              "type": "generic",
                              "value": "add_2",
                              "name": "add_2"
                            }
                          ],
                          "outputs": [
                            {
                              "variable": false,
                              "type": "string",
                              "value/const": "Fizz"
                            }
                          ]
                        },
                        {
                          "inputs": [
                            {
                              "variable": true,
                              "type": "generic",
                              "value": "add_0",
                              "name": "add_0"
                            },
                            {
                              "variable": false,
                              "type": "number",
                              "value/const": 0,
                              "name": "add_2"
                            }
                          ],
                          "outputs": [
                            {
                              "variable": false,
                              "type": "string",
                              "value/const": "Buzz"
                            }
                          ]
                        },
                        {
                          "inputs": [
                            {
                              "variable": true,
                              "type": "generic",
                              "value": "add_0",
                              "name": "add_0"
                            },
                            {
                              "variable": true,
                              "type": "generic",
                              "value": "add_2",
                              "name": "add_2"
                            }
                          ],
                          "outputs": [
                            {
                              "variable": true,
                              "type": "generic",
                              "value": "r8",
                              "name": "out"
                            }
                          ]
                        }
                      ],
                      "inputPorts": {
                        "add_2": "generic",
                        "add_0": "generic",
                        "r8": "generic"
                      },
                      "outputPorts": {
                        "out": "generic"
                      }
                    }
                  ],
                  "edges": [
                    {
                      "from": "n",
                      "to": "add_0:s1"
                    },
                    {
                      "from": "const(1)_1:output",
                      "to": "add_0:s2"
                    },
                    {
                      "from": "add_0:sum",
                      "to": "match_rules:add_0"
                    },
                    {
                      "from": "const(1)_3:output",
                      "to": "add_2:s1"
                    },
                    {
                      "from": "const(1)_4:output",
                      "to": "add_2:s2"
                    },
                    {
                      "from": "add_2:sum",
                      "to": "match_rules:add_2"
                    },
                    {
                      "from": "add_0",
                      "to": "defco_out_fn_8:add_0"
                    },
                    {
                      "from": "add_2",
                      "to": "defco_out_fn_8:add_2"
                    },
                    {
                      "from": "defco_out_fn_8:out",
                      "to": "match_rules:r8"
                    },
                    {
                      "from": "match_rules:out",
                      "to": "out"
                    }
                  ]
                }
              }
            }
          ],
          "edges": [
            {
              "from": "n",
              "to": "match:n"
            },
            {
              "from": "match:out",
              "to": "out"
            }
          ]
        },
        "name": "defco_match_0"
      }
    }
  ],
  "edges": []
}